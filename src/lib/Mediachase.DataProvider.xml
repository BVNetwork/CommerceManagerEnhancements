<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediachase.DataProvider</name>
    </assembly>
    <members>
        <member name="M:Mediachase.Data.Provider.DataProvider.LoadTable(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Executes a command resulting in a single table, and returns the table.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The returned table.</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataProvider.LoadDataSet(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Executes a command resulting in a data set, and returns the data set.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>A data result containing the returned data set.</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataProvider.LoadReader(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Executes a command, and returns a reader enumerating the results.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>A <see cref="T:Mediachase.Data.Provider.DataResult"/> containing the result reader.</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataProvider.LoadReader(Mediachase.Data.Provider.DataCommand,System.DateTimeKind)">
            <summary>
            Executes a command, and returns a reader enumerating the results.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="dateTimeKind">
            All <see cref="T:DateTime"/> values in the result will have 
            <paramref name="dateTimeKind"/> specified as the value of <see cref="P:DateTime.Kind"/>.
            </param>
            <returns>A <see cref="T:Mediachase.Data.Provider.DataResult"/> containing the result reader.</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataProvider.Save(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Saves the data table.
            </summary>
            <param name="command">The command.</param>
            <returns>Returns either DataTable or DataRow[] depending on what was passed in the command</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataProvider.Run(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Runs the specified command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Mediachase.Data.Provider.DataProvider.RunReturnInteger(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Runs the return integer.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataProvider.ExecuteScalar(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Runs the return integer.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Data.Provider.DataProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.LoadTable(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Executes a command resulting in a single table, and returns the table.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The returned table.</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.LoadDataSet(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Executes a command resulting in a single table, and returns the table.
            </summary>
            <param name="command">The command to execute.</param>        
            <returns>The returned table.</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.LoadReader(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Executes a command resulting in a data set, and returns the data set.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>A data result containing the returned data set.</returns>        
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.LoadReader(Mediachase.Data.Provider.DataCommand,System.DateTimeKind)">
            <summary>
            Executes a command, and returns a reader enumerating the results.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="dateTimeKind">
            All <see cref="T:DateTime"/> values in the result will have 
            <paramref name="dateTimeKind"/> specified as the value of <see cref="P:DateTime.Kind"/>.
            </param>
            <returns>A <see cref="T:Mediachase.Data.Provider.DataResult"/> containing the result reader.</returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.LoadTableSchema(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Loads the table.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.ExecuteNonExec(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Loads the table.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.ExecuteScalar(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Loads the table.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.Run(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Runs the specified command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.RunReturnInteger(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Runs the return integer.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.Save(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Saves the specified command.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Data.Provider.DataService.LoadProviders">
            <summary>
            Loads the providers.
            </summary>
        </member>
        <member name="P:Mediachase.Data.Provider.DataService.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Mediachase.Data.Provider.DataService.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="M:Mediachase.Data.Provider.TransactionScope.OnCommit(System.Action)">
            <summary>
            Runs an action when the current transaction is committed, or immediately if a transaction is not in progress.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Mediachase.Data.Provider.TransactionScope.OpenConnection(System.Data.IDbCommand,System.String,Mediachase.Data.Provider.TransactionScope.ConnectionDelegate)">
            <summary>
            Assigns a connection and a transaction to the specified database command.
            The connection and transaction will be reused if there is a transaction in progress on the specified database.
            </summary>
            <param name="cmd">The database command.</param>
            <param name="connectionString">The connection string of the target database.</param>
            <param name="connectionFactory">A delegate for creating database connections.</param>
            <returns>True if a new connection was created, otherwise false.</returns>
            <remarks>If true is returned, the caller will be reponsible for closing the database connection.</remarks>
        </member>
        <member name="T:Mediachase.Data.Provider.TransactionScope.ConnectionDelegate">
            <summary>
            The delegate use to create database connection objects.
            </summary>
            <returns>A database connection.</returns>
        </member>
    </members>
</doc>
